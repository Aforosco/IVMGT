// <auto-generated />
using System;
using Invco.Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Invco.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("Invco.Data.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Invco.Data.Entities.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AssetName")
                        .HasColumnType("TEXT");

                    b.Property<string>("AssetUser")
                        .HasColumnType("TEXT");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Purchasedate")
                        .HasColumnType("TEXT");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Assets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssetName = "Laptop",
                            AssetUser = "John Doe",
                            CategoryId = 1,
                            DepartmentId = 2,
                            Purchasedate = new DateTime(2023, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNumber = "LTP001"
                        },
                        new
                        {
                            Id = 2,
                            AssetName = "Projector",
                            AssetUser = "Jane Smith",
                            CategoryId = 1,
                            DepartmentId = 3,
                            Purchasedate = new DateTime(2022, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNumber = "PRJ002"
                        },
                        new
                        {
                            Id = 3,
                            AssetName = "Office Chair",
                            AssetUser = "Mike Brown",
                            CategoryId = 2,
                            DepartmentId = 1,
                            Purchasedate = new DateTime(2021, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNumber = "OFC003"
                        },
                        new
                        {
                            Id = 4,
                            AssetName = "Whiteboard",
                            AssetUser = "Sarah Johnson",
                            CategoryId = 3,
                            DepartmentId = 3,
                            Purchasedate = new DateTime(2020, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNumber = "WBD004"
                        },
                        new
                        {
                            Id = 5,
                            AssetName = "Photocopier",
                            AssetUser = "Robert Green",
                            CategoryId = 1,
                            DepartmentId = 1,
                            Purchasedate = new DateTime(2023, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNumber = "PHC005"
                        },
                        new
                        {
                            Id = 6,
                            AssetName = "Server",
                            AssetUser = "IT Admin",
                            CategoryId = 1,
                            DepartmentId = 2,
                            Purchasedate = new DateTime(2024, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNumber = "SRV006"
                        },
                        new
                        {
                            Id = 7,
                            AssetName = "Desk",
                            AssetUser = "Emma White",
                            CategoryId = 2,
                            DepartmentId = 1,
                            Purchasedate = new DateTime(2019, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNumber = "DSK007"
                        },
                        new
                        {
                            Id = 8,
                            AssetName = "Van",
                            AssetUser = "Logistics Team",
                            CategoryId = 4,
                            DepartmentId = 4,
                            Purchasedate = new DateTime(2022, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNumber = "VAN008"
                        },
                        new
                        {
                            Id = 9,
                            AssetName = "Cleaning Machine",
                            AssetUser = "Housekeeping",
                            CategoryId = 5,
                            DepartmentId = 5,
                            Purchasedate = new DateTime(2021, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNumber = "CLM009"
                        },
                        new
                        {
                            Id = 10,
                            AssetName = "AC Unit",
                            AssetUser = "Facility Manager",
                            CategoryId = 5,
                            DepartmentId = 4,
                            Purchasedate = new DateTime(2020, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNumber = "ACU010"
                        },
                        new
                        {
                            Id = 11,
                            AssetName = "Tablet",
                            AssetUser = "Dr. Adams",
                            CategoryId = 1,
                            DepartmentId = 3,
                            Purchasedate = new DateTime(2023, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNumber = "TAB011"
                        },
                        new
                        {
                            Id = 12,
                            AssetName = "Bookshelf",
                            AssetUser = "Library Staff",
                            CategoryId = 2,
                            DepartmentId = 3,
                            Purchasedate = new DateTime(2021, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNumber = "BSH012"
                        },
                        new
                        {
                            Id = 13,
                            AssetName = "Camera",
                            AssetUser = "Media Team",
                            CategoryId = 1,
                            DepartmentId = 2,
                            Purchasedate = new DateTime(2022, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNumber = "CAM013"
                        },
                        new
                        {
                            Id = 14,
                            AssetName = "Microphone",
                            AssetUser = "Event Coordinator",
                            CategoryId = 1,
                            DepartmentId = 3,
                            Purchasedate = new DateTime(2020, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNumber = "MIC014"
                        },
                        new
                        {
                            Id = 15,
                            AssetName = "Filing Cabinet",
                            AssetUser = "Admin Staff",
                            CategoryId = 2,
                            DepartmentId = 1,
                            Purchasedate = new DateTime(2019, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNumber = "FCB015"
                        },
                        new
                        {
                            Id = 16,
                            AssetName = "Electric Generator",
                            AssetUser = "Maintenance Staff",
                            CategoryId = 5,
                            DepartmentId = 4,
                            Purchasedate = new DateTime(2018, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNumber = "GEN016"
                        },
                        new
                        {
                            Id = 17,
                            AssetName = "Smart TV",
                            AssetUser = "Lounge",
                            CategoryId = 1,
                            DepartmentId = 3,
                            Purchasedate = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNumber = "STV017"
                        },
                        new
                        {
                            Id = 18,
                            AssetName = "Chairs",
                            AssetUser = "Auditorium",
                            CategoryId = 2,
                            DepartmentId = 3,
                            Purchasedate = new DateTime(2021, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNumber = "CHR018"
                        },
                        new
                        {
                            Id = 19,
                            AssetName = "Hand Truck",
                            AssetUser = "Logistics",
                            CategoryId = 5,
                            DepartmentId = 4,
                            Purchasedate = new DateTime(2022, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNumber = "HDT019"
                        },
                        new
                        {
                            Id = 20,
                            AssetName = "Fire Extinguisher",
                            AssetUser = "Safety Officer",
                            CategoryId = 5,
                            DepartmentId = 4,
                            Purchasedate = new DateTime(2019, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNumber = "FEX020"
                        });
                });

            modelBuilder.Entity("Invco.Data.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Furniture"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Stationery"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Vehicles"
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Maintenance Equipment"
                        });
                });

            modelBuilder.Entity("Invco.Data.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentName = "Finance"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentName = "IT"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentName = "Academics"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentName = "Maintenance"
                        },
                        new
                        {
                            Id = 5,
                            DepartmentName = "Housekeeping"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Invco.Data.Entities.Asset", b =>
                {
                    b.HasOne("Invco.Data.Entities.Category", "Category")
                        .WithMany("Asset")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invco.Data.Entities.Department", "Departments")
                        .WithMany("Asset")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Invco.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Invco.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invco.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Invco.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Invco.Data.Entities.Category", b =>
                {
                    b.Navigation("Asset");
                });

            modelBuilder.Entity("Invco.Data.Entities.Department", b =>
                {
                    b.Navigation("Asset");
                });
#pragma warning restore 612, 618
        }
    }
}
